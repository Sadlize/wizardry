@use 'sass:map';
@use 'sass:string';
@use 'sass:list';
@use 'sass:meta';

$breakpoints: (
  xs: 0,
  sm: 430.02,
  md: 1024,
  lg: 1280.02,
  xl: 1440.02,
  xxl: 1920,
  xxxl: 2560,
) !default;

@mixin css-property($property, $value) {
  @if type_of($value) == string {
    #{$property}: string.unquote($value);
  } @else {
    #{$property}: $value;
  }
}

@function split-screens($screen) {
  $string: string.unquote('#{$screen}');
  $sep-id: string.index(string.quote($string), '-');

  @if $sep-id {
    @return (string.quote(string.slice($string, 0, $sep-id - 1)), string.quote(string.slice($string, $sep-id + 1)));
  } @else {
    @return $string;
  }
}

@function add-query($acc, $width, $direction) {
  @return $acc + ' and (#{$direction}-width: #{$width}px)';
}

@function get-width-value($_screen) {
  @return if(map.has-key($breakpoints, $_screen), map.get($breakpoints, $_screen), $_screen);
}

@function fluid-typography($font-start, $font-end, $screen-from, $screen-to) {
  @return calc(
    #{$font-start * 0.0625}rem + (($font-end - $font-start) * (100vw - #{$screen-from}px) / ($screen-to - $screen-from))
  );
}

@mixin media($properties, $orientation: false) {
  $media-direction: 'min' !default;

  @each $property, $value in $properties {
    @if $property == 'extend' {
      @extend #{string.unquote($value)} !optional;
    } @else if type_of($value) == 'map' {
      @each $screen, $val in $value {
        $screen: split-screens($screen);

        @if $screen == all {
          @include css_property($property, $val);
        } @else {
          $query: 'only screen';

          @if type_of($screen) == 'list' {
            $min-screen: get-width-value(list.nth($screen, 1));
            $max-screen: get-width-value(list.nth($screen, 2)) - 0.02;

            @if $min-screen == min or $min-screen == max {
              $query: add-query($query, $max-screen, $min-screen);
            } @else {
              $query: add-query($query, $min-screen, 'min');
              $query: add-query($query, $max-screen, 'max');
            }

            @if $property == 'fluid-typography' and type_of($val) == 'list' {
              $val: fluid-typography(list.nth($val, 1), list.nth($val, 2), $min-screen, $max-screen);
            }
          } @else if type_of($screen) == 'number' or 'string' {
            $query: add-query($query, get-width-value($screen), $media-direction);
          } @else {
            @error "Incorrect screen type. Only a string ('200-lg' or 200-lg) and a number (single 300 or range with quotes '200-500') are allowed.";
          }

          @if $orientation {
            $query: $query + ' and (orientation: #{$orientation})';
          }

          @media #{$query} {
            @include css_property(if($property == 'fluid-typography', 'font-size', $property), $val);
          }
        }
      }
    } @else {
      @include css_property($property, $value);
    }
  }
}
